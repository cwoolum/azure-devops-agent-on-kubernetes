# Multi-environment pipeline for Azure DevOps Agent
# Supports development, staging, and production deployments

trigger:
  branches:
    include:
      - master
      - main
      - develop
  paths:
    exclude:
      - README.md
      - LICENSE
      - examples/**

pr:
  branches:
    include:
      - master
      - main

variables:
  - name: acrName
    value: fanfindadmin
  - name: imageName
    value: azure-devops-agent
  - name: imageTag
    value: $(Build.BuildId)
  - name: isMainBranch
    value: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))]

stages:
  - stage: Build
    displayName: 'Build and Test'
    jobs:
      - job: BuildJob
        displayName: 'Build Docker Image and Helm Chart'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: .azuredevops/templates/build-and-push.yml
            parameters:
              acrName: $(acrName)
              imageName: $(imageName)
              imageTag: $(imageTag)
              azureSubscription: 'Azure'
              runVulnerabilityScan: true

  - stage: DeployDev
    displayName: 'Deploy to Development'
    condition: and(succeeded('Build'), ne(variables['Build.Reason'], 'PullRequest'))
    dependsOn: Build
    jobs:
      - deployment: DeployToDev
        displayName: 'Deploy to Development Environment'
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'development'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Deploying to development environment..."
                    echo "Image: $(acrName).azurecr.io/$(imageName):$(imageTag)"
                    echo "Chart Version: $(Build.BuildNumber)"
                    # Add actual deployment commands here
                  displayName: 'Deploy to Dev'

  - stage: DeployStaging
    displayName: 'Deploy to Staging'
    condition: and(succeeded('DeployDev'), eq(variables.isMainBranch, true))
    dependsOn: DeployDev
    jobs:
      - deployment: DeployToStaging
        displayName: 'Deploy to Staging Environment'
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'staging'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Deploying to staging environment..."
                    echo "Image: $(acrName).azurecr.io/$(imageName):$(imageTag)"
                    # Add actual deployment commands here
                  displayName: 'Deploy to Staging'

  - stage: DeployProd
    displayName: 'Deploy to Production'
    condition: and(succeeded('DeployStaging'), eq(variables.isMainBranch, true))
    dependsOn: DeployStaging
    jobs:
      - deployment: DeployToProduction
        displayName: 'Deploy to Production Environment'
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'production'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Deploying to production environment..."
                    echo "Image: $(acrName).azurecr.io/$(imageName):$(imageTag)"
                    # Add actual deployment commands here
                  displayName: 'Deploy to Production'
